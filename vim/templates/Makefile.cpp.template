# File: Makefile.cpp.template
# Author: Icko Iben
# Date Created: 13 October 2023
# Date Last Modified: 16 October 2023
# Version: 1.0.2
#
# V1.0.0 - 10/13/2023
# - File created
# - Initial versions for: all, debug, soln, test, diff, clean
#
# V1.0.1 - 10/14/2023
# - Comments added
#
# V1.0.2 - 10/16/2023
# - Explicitly define CPP_FILES, EXECUTABLE and SOLN_EXEC
# - Added new targets testmore and diffmore that handles verbose output
#
# ----------------
# USAGE
# ----------------
# To compile:
# make
# 
# Debug mode:
# make debug
#
# Link ncurses library:
# make curses
#
# Run soln executable:
# make soln
#
# Run compiled project `test`:
# make test
#
# Run compiled project `test` with verbose output:
# make testmore
# 
# Diff the outputs:
# make diff
#
# Diff the verbose outputs:
# make diffmore
#
# Clean executables:
# make clean

# Specify the source files
CPP_FILES := CPP_FILES_GO_HERE

# Specify name of final executable
EXECUTABLE := a

# Name of professor's executable
SOLN_EXEC := projectX_solution_osx

# Compiler flags
CFLAGS := -Wall -Wextra -std=c++11
CURSES_LINK := -lncurses

help:
	@echo "----------------"
	@echo "USAGE"
	@echo "----------------"
	@echo "To compile:                        make"
	@echo "Link ncurses: 					  make curses"
	@echo "Run soln executable:               make soln"
	@echo "Run compiled project 'test':       make test"
	@echo "Run verbose 'test':                make testmore"
	@echo "Diff the outputs:                  make diff"
	@echo "Diff the verbose outputs:          make diffmore"
	@echo "Clean executables:                 make clean"
	@echo "----------------"
	@echo


# PHONY: special target used to declare certain targets as "phony".
# Phony targets are not actual files; they are used to specify actions
# that should always be executed, regardless of whether a file with
# the same name as target exists.
#
# Phony targets are typically used for tasks that don't produce output
# files or don't depend on the existence/modification of files. Instead,
# They are executed based on their dependencies and commands.
#
# Even though some of our targets create output files, none of the output
# files created are of the same name as our targets. Therefore, they should
# all be phony (i.e. `test` does not create a file named `test`, `diff` does
# not create a file named `diff`, etc.)
.PHONY: all curses clean soln test testmore diff diffmore

# all
#
# Default target. This is run when `make` is called with no arguments.
# In this case, we build the target $(EXECUTABLE), which is the target
# specified below which compiles our program
all: $(EXECUTABLE)

# $(EXECUTABLE)
#
# Compiles out program
$(EXECUTABLE): $(CPP_FILES)
	g++ $(CFLAGS) -o $(EXECUTABLE) $(CPP_FILES)

# curses
#
# Links the ncurses library to our project (i.e. with `g++ -lncurses`)
curses: CFLAGS += $(CURSES_LINK)
curses: $(EXECUTABLE)

# soln
#
# Runs the professors solution with normal and verbose output.
soln:
	@for f in io/input-*.txt; do \
		num=$$(basename $$f | sed 's/^input-//; s/\.txt$$//'); \
		echo "./$(SOLN_EXEC) < $$f > io/soln-$$num.txt"; \
		./$(SOLN_EXEC) < $$f > io/soln-$$num.txt; \
		echo "./$(SOLN_EXEC) printMore < $$f > io/verbose-soln-$$num.txt"; \
		./$(SOLN_EXEC) printMore < $$f > io/verbose-soln-$$num.txt; \
		echo;
	done
	@echo "---------------"

# test
#
# Runs our compiled project with normal output
test:
	@for f in io/input-*.txt; do \
		outfile=$$(basename $$f | sed 's/^input-/output-/'); \
		echo "./$(EXECUTABLE) < $$f > io/$$outfile"; \
		./$(EXECUTABLE) < $$f > io/$$outfile; \
		echo;
	done
	@echo "---------------"

# testmore
#
# Runs our compiled project with verbose output
testmore:
	@for f in io/input-*.txt; do \
		verbose_outfile=$$(basename $$f | sed 's/^input-/verbose-output-/'); \
		echo "./$(EXECUTABLE) printMore < $$f > io/$$verbose_outfile"; \
		./$(EXECUTABLE) printMore < $$f > io/$$verbose_outfile; \
		echo;
	done
	@echo "---------------"

# diff
#
# Checks our output with professors solution
diff:
	@for f in io/input-*.txt; do \
		num=$$(basename $$f .txt | sed 's/^input-//'); \
		echo "diff io/output-$$num.txt io/soln-$$num.txt"; \
		diff io/output-$$num.txt io/soln-$$num.txt; \
		echo;
	done
	@echo "---------------"

# diffmore
#
# Compares our verbose output with professors' verbose solutions.
diffmore:
	@for f in io/input-*.txt; do \
		num=$$(basename $$f .txt | sed 's/^input-//'); \
		echo "diff io/verbose-output-$$num.txt io/verbose-soln-$$num.txt"; \
		diff io/verbose-output-$$num.txt io/verbose-soln-$$num.txt; \
		echo;
	done
	@echo "---------------"

# clean
#
# Cleans up any executable created
clean:
	rm -i $(EXECUTABLE)
